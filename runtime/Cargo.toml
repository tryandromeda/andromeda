[package]
name = "andromeda-runtime"
version.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
readme = "../README.md"

[features]
default = []
canvas = ["dep:wgpu", "dep:image"]
crypto = ["dep:ring", "dep:rand"]
storage = ["dep:rusqlite"]
virtualfs = ["storage"]
serve = []
hotpath = ["dep:hotpath", "hotpath/hotpath", "andromeda-core/hotpath"]
hotpath-alloc-bytes-total = ["hotpath/hotpath-alloc-bytes-total"]
hotpath-alloc-count-total= ["hotpath/hotpath-alloc-count-total"]
hotpath-off = ["hotpath/hotpath-off"]
typescript = ["nova_vm/typescript"]
annex-b = ["nova_vm/annex-b"]
proposals = ["nova_vm/proposals"]

[dependencies]
andromeda-core.workspace = true
anyhow.workspace = true
nova_vm.workspace = true
anymap.workspace = true
async-trait.workspace = true
chrono.workspace = true
futures.workspace = true
tokio = { workspace = true, features = [
    "net",
    "rt-multi-thread",
    "io-util",
    "sync",
    "time"
] }
oxc-miette.workspace = true
oxc_diagnostics.workspace = true
saffron.workspace = true
serde.workspace = true
serde_json.workspace = true
url.workspace = true
base64-simd.workspace = true
image = { workspace = true, optional = true }
rand = { workspace = true, optional = true }
ring = { workspace = true, optional = true }
rusqlite = { workspace = true, optional = true, features = [
    "bundled",
    "functions",
    "load_extension"
] }
signal-hook.workspace = true
socket2.workspace = true
tempfile.workspace = true
trust-dns-resolver.workspace = true
lazy_static.workspace = true
libloading.workspace = true
libffi.workspace = true
thiserror.workspace = true
uuid.workspace = true
wgpu = { workspace = true, optional = true }
rustls.workspace = true
tokio-rustls.workspace = true
webpki-roots.workspace = true
rustls-pemfile.workspace = true
rustls-pki-types.workspace = true
hotpath = { workspace = true, optional = true }
